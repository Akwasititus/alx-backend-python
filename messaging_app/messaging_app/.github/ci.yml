name: Django CI

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  test:
    runs-on: ubuntu-latest
    
    services:
      mysql:
        image: mysql:8.0
        env:
          MYSQL_ROOT_PASSWORD: root
          MYSQL_DATABASE: test_db
          MYSQL_USER: test_user
          MYSQL_PASSWORD: test_password
        ports:
          - 3306:3306
        options: --health-cmd="mysqladmin ping" --health-interval=10s --health-timeout=5s --health-retries=3

    strategy:
      matrix:
        python-version: [3.8, 3.9, 3.10]

    steps:
    - name: 📥 Checkout code
      uses: actions/checkout@v4

    - name: 🐍 Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}

    - name: 📦 Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install pytest pytest-django coverage

    - name: 🗄️ Wait for MySQL to be ready
      run: |
        sudo apt-get update
        sudo apt-get install -y mysql-client
        while ! mysqladmin ping -h"127.0.0.1" -P3306 -uroot -proot --silent; do
          echo "Waiting for MySQL..."
          sleep 2
        done

    - name: 🔧 Set up environment variables
      run: |
        echo "DATABASE_URL=mysql://root:root@127.0.0.1:3306/test_db" >> $GITHUB_ENV
        echo "DEBUG=False" >> $GITHUB_ENV
        echo "SECRET_KEY=test-secret-key-for-ci-$GITHUB_SHA" >> $GITHUB_ENV

    - name: 🧪 Run migrations
      run: |
        python manage.py makemigrations
        python manage.py migrate

    - name: ✅ Run tests with pytest
      run: |
        python -m pytest --cov=./ --cov-report=xml --cov-report=html -v

    - name: 📊 Upload coverage reports
      uses: actions/upload-artifact@v4
      with:
        name: coverage-report-${{ matrix.python-version }}
        path: htmlcov/
        retention-days: 7

    - name: 📈 Upload coverage to Codecov
      uses: codecov/codecov-action@v3
      with:
        file: ./coverage.xml
        flags: unittests
        name: codecov-umbrella

  lint:
    runs-on: ubuntu-latest
    
    steps:
    - name: 📥 Checkout code
      uses: actions/checkout@v4

    - name: 🐍 Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.9'

    - name: 📦 Install linting tools
      run: |
        python -m pip install --upgrade pip
        pip install flake8 black isort

    - name: 🔍 Run flake8
      run: |
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics

    - name: 🎨 Check code formatting with black
      run: |
        black --check .

    - name: 🔄 Check import sorting with isort
      run: |
        isort --check-only .
